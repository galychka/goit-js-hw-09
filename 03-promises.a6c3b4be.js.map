{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAC9BC,EAAaH,EAAKI,SAASC,MAC3BC,EAAiBN,EAAKI,SAASG,KAC/BC,EAAcR,EAAKI,SAASK,OACTR,SAASC,cAAc,UAE/BQ,iBAAiB,SAElC,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOX,EAAWY,OAExBR,EAAOO,OAAOR,EAAeS,OAC7BN,EAASK,OAAON,EAAYO,OAC9BC,EAAW,EAEf,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAExB,IAAIC,SAAQ,SAACC,EAASC,GAClCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUb,MAAAc,IAEpBM,EAAO,CAAEE,SAAAT,EAAUb,MAAAc,G,GAEpBA,E,IAIFS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUtB,EAAKwB,EAALxB,MACjByB,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAfN,EAAS,QAAYM,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAL,G,IAAGF,EAAQE,EAARF,SAAUtB,EAAKwB,EAALxB,MAClByB,EAAAhC,GAASiC,OAAOI,QACd,sBAAqCF,OAAfN,EAAS,QAAYM,OAAN5B,EAAM,M,IAKnD,IAAK,IAAI+B,EAAI,EAAGA,GAAK3B,EAAQ2B,GAAK,EAChCnB,EAAcD,EAAUH,GACxBA,GAASN,EACTS,GAAY,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector('form');\nconst inputDelay = form.elements.delay; \nconst inputDelayStep = form.elements.step;\nconst inputAmount = form.elements.amount;\nconst btnCreatePromise = document.querySelector('button');\n\nbtnCreatePromise.addEventListener('click', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let delay = Number(inputDelay.value); \n\n  const step = Number(inputDelayStep.value);\n  const amount = Number(inputAmount.value);\n  let position = 1; \n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3; \n    \n    let promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(position, delay);\n    delay += step;\n    position += 1; \n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","elements","delay","$ce04d3a99e08e73b$var$inputDelayStep","step","$ce04d3a99e08e73b$var$inputAmount","amount","addEventListener","event","preventDefault","delay1","Number","value","position1","createPromise","position2","delay2","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","i"],"version":3,"file":"03-promises.a6c3b4be.js.map"}